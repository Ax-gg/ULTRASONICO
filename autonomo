// Pines para los motores
int R1 = 4;  // Motor Derecho
int R2 = 5;  // Motor Derecho
int L1 = 6;  // Motor Izquierdo
int L2 = 7;  // Motor Izquierdo

// Pines para el sensor ultrasónico
int trigPin = 9;  // TRIG
int echoPin = 10; // ECHO

void setup() {
  // Configuramos los pines de los motores como salida
  pinMode(R1, OUTPUT);
  pinMode(R2, OUTPUT);
  pinMode(L1, OUTPUT);
  pinMode(L2, OUTPUT);

  // Configuramos los pines del sensor ultrasónico
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  
  // Iniciamos la comunicación serial para depurar
  Serial.begin(9600);
}

void loop() {
  // Medimos la distancia
  int distancia = medirDistancia();

  // Mostramos la distancia en el monitor serial
  Serial.print("Distancia: ");
  Serial.println(distancia);

  // Si la distancia es menor a 5 cm, retrocede y luego gira a la derecha
  if (distancia < 5 && distancia > 0) { // Aseguramos que la distancia sea válida
    retroceder();
    delay(500);  // Retroceder por 500 ms
    girarDerecha();
    delay(500);  // Girar por 500 ms
  } else {
    avanzar();  // Si no hay obstáculo, seguir avanzando
  }

  delay(100);  // Esperar un poco antes de medir de nuevo
}

int medirDistancia() {
  // Enviar señal del TRIG
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Recibir la señal de ECHO y calcular la distancia
  long duracion = pulseIn(echoPin, HIGH, 30000); // Agregamos un timeout de 30ms para evitar quedarse esperando por siempre
  int distancia = duracion * 0.034 / 2;  // Convertir tiempo en distancia en cm
  
  // Devolvemos -1 si no se mide nada para evitar errores
  if (duracion == 0) {
    return -1;
  } else {
    return distancia;
  }
}

void retroceder() {
  // Mover ambos motores hacia adelante (antes estaba mal definido)
  digitalWrite(R1, HIGH);
  digitalWrite(R2, LOW);
  digitalWrite(L1, HIGH);
  digitalWrite(L2, LOW);
}

void avanzar() {
  // Mover ambos motores hacia atrás (antes estaba mal definido)
  digitalWrite(R1, LOW);
  digitalWrite(R2, HIGH);
  digitalWrite(L1, LOW);
  digitalWrite(L2, HIGH);
}

void girarDerecha() {
  // Mover el carrito hacia la derecha
  digitalWrite(R1, LOW);
  digitalWrite(R2, HIGH);
  digitalWrite(L1, HIGH);
  digitalWrite(L2, LOW);
}
