// Pines para los motores y el sensor ultrasónico
int R1 = 4;   // Motor Derecho
int R2 = 5;   // Motor Derecho
int L1 = 6;   // Motor Izquierdo
int L2 = 7;   // Motor Izquierdo
int trigPin = 9;   // TRIG del sensor ultrasónico
int echoPin = 10;  // ECHO del sensor ultrasónico

void setup() {
  // Configuración de los pines de los motores como salida
  pinMode(R1, OUTPUT);
  pinMode(R2, OUTPUT);
  pinMode(L1, OUTPUT);
  pinMode(L2, OUTPUT);

  // Pines de control adicionales (si los usas para LEDs o indicadores)
  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);

  // Configuración de los pines del sensor ultrasónico
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // Inicialización de Serial (opcional, para depuración)
  Serial.begin(9600);
}

// Función para avanzar el carrito
void avanzar() {
  // Mover ambos motores hacia adelante
  digitalWrite(R1, LOW);
  digitalWrite(R2, HIGH);
  digitalWrite(L1, LOW);
  digitalWrite(L2, HIGH);
  digitalWrite(2, HIGH); // LED u otro indicador si es necesario
  digitalWrite(3, LOW);
}

// Función para retroceder el carrito
void retroceder() {
  // Mover ambos motores hacia atrás
  digitalWrite(R1, HIGH);
  digitalWrite(R2, LOW);
  digitalWrite(L1, HIGH);
  digitalWrite(L2, LOW);
  digitalWrite(2, LOW);  // LED u otro indicador si es necesario
  digitalWrite(3, HIGH);
}

// Función para girar a la derecha
void girarDerecha() {
  // El motor derecho va hacia atrás, el motor izquierdo hacia adelante
  digitalWrite(R1, HIGH);
  digitalWrite(R2, LOW);  // Motor derecho hacia atrás
  digitalWrite(L1, LOW);
  digitalWrite(L2, HIGH); // Motor izquierdo hacia adelante
  digitalWrite(2, LOW);
  digitalWrite(3, HIGH);  // LED u otro indicador si es necesario
}

// Función para girar a la izquierda
void girarIzquierda() {
  // El motor derecho va hacia adelante, el motor izquierdo hacia atrás
  digitalWrite(R1, LOW);
  digitalWrite(R2, HIGH); // Motor derecho hacia adelante
  digitalWrite(L1, HIGH);
  digitalWrite(L2, LOW);  // Motor izquierdo hacia atrás
  digitalWrite(2, HIGH);  // LED u otro indicador si es necesario
  digitalWrite(3, LOW);
}

// Función para medir la distancia usando el sensor ultrasónico
int medirDistancia() {
  // Enviar señal del TRIG
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Recibir la señal de ECHO y calcular la distancia
  int duracion = pulseIn(echoPin, HIGH);
  int distancia = duracion * 0.034 / 2;  // Convertir tiempo en distancia en cm
  return distancia;
}

void loop() {
  // Medimos la distancia
  int distancia = medirDistancia();

  // Mostrar la distancia en el monitor serial (opcional)
  Serial.print("Distancia: ");
  Serial.println(distancia);

  // Si hay un obstáculo cerca (menos de 5 cm), retroceder y girar
  if (distancia < 5) {
    retroceder();
    delay(500);  // Retroceder por medio segundo
    girarDerecha();
    delay(300);  // Girar por 1 segundo
  } else {
    avanzar();  // Si no hay obstáculo, seguir avanzando
  }

  delay(100);  // Esperar un poco antes de medir de nuevo
}
